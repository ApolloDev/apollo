#summary Description of the output schema

= Introduction =

This page describes the layout and usage of each of the 5 database tables that a simulator must output its data.

The full schema can be found [https://apollo.googlecode.com/svn/apollo-ws/schemas/output/db/trunk/apollo_output_schema.sql here].

= Database initialization =

The easiest way to create and initialize the output schema is to import the schema definition.  The schema should be compatible with several SQL databases, but we'll be using MySQL in all of the examples here.

First, you must have MySQL installed.  You can find an appropriate package for your OS [http://www.mysql.com/ here], or use a package manager like apt-get, yum, or homebrew.  The specifics of this is outside of the scope of this documentation.

Next, download the script:

<code>
wget https://apollo.googlecode.com/svn/apollo-ws/schemas/output/db/trunk/apollo_output_schema.sql
</code>

Finally, import the script into a previously created database (see MySQL documentation for how to do this).  Please keep in mind that this will remove any tables in this database which share a name with the databases described here.

<code>
mysql -uroot -p apollo < apollo_output_schema.sql
</code>



= Tables =

== run ==

<code language="sql">
CREATE TABLE run (
  id    INT(8) NOT NULL AUTO_INCREMENT,
  label VARCHAR(255),
  PRIMARY KEY (id)
);
</code>

This table describes a run and an associated label.

=== Example ===

|| *id* || *label* ||
|| 1 || University of Pittsburgh_FRED_v2.3282_77283972 ||

== simulated_population ==

<code language="sql">
CREATE TABLE simulated_population (
  id               INT(8) NOT NULL AUTO_INCREMENT,
  label            VARCHAR(255),
  PRIMARY KEY (id)
);
</code>

This table represents all of the different strata within your model.  

=== Example ===

|| *id* || *label* ||
|| 1 || susceptible males in pulaski county ||
|| 2 || infected males in pulaski county ||
|| 3 || exposed males in pulaski county ||
|| 4 || recovered males in pulaski county ||
|| 5 || susceptible females in pulaski county ||
|| 6 || infected females in pulaski county ||
|| 7 || exposed females in pulaski county ||
|| 8 || recovered females in pulaski county ||

== population_axis ==

<code language="sql">
CREATE TABLE population_axis (
  id    INT(8)       NOT NULL AUTO_INCREMENT,
  label VARCHAR(255) NOT NULL,
  PRIMARY KEY (id)
);
</code>

This table represents all of the ways your populations can be stratified.  For example, one axis can be sex which may have two possible values: male and female.

The 'set' label is a special case.  Set is one of the pre-coordinated bins defined in Apollo-SV.  Some commonly used sets are 'susceptible', 'exposed', 'infected', and 'recovered'.  Essentially, the 'set' axis is stating that all individuals within a population belong to the specified set.

You can also use qualities and dispositions to post-coordinate sets, but that is outside of the scope of this documentation.

|| *id* || *label* ||
|| 1 || sex ||
|| 2 || age ||
|| 3 || location ||
|| 4 || set ||
|| 5 || quality ||
|| 6 || disposition ||

== simulated_population_axis_value ==

<code language="sql">
CREATE TABLE simulated_population_axis_value (
  population_id INT(8)       NOT NULL REFERENCES simulated_population (id),
  axis_id       INT(8)       NOT NULL REFERENCES population_axis (id),
  value         VARCHAR(255) NOT NULL
);
</code>

This table maps specific populations to specific discriminators.

=== Example ===

|| *population_id* || *axis_id* || *value* ||
|| 1 || 1 || male ||
|| 1 || 3 || pulaski county ||
|| 1 || 4 || susceptible ||
|| 2 || 1 || male ||
|| 2 || 3 || pulaski county ||
|| 2 || 4 || infected ||
|| 3 || 1 || male ||
|| 3 || 3 || pulaski county ||
|| 3 || 4 || exposed ||
|| 3 || 1 || male ||
|| 3 || 3 || pulaski county ||
|| 3 || 4 || recovered ||

== time_series ==

<code language="sql">
CREATE TABLE time_series (
  run_id        INT(8) NOT NULL REFERENCES run (id),
  population_id INT(8) NOT NULL REFERENCES simulated_population (id),
  time_step     INT(8) NOT NULL,
  pop_count     FLOAT  NOT NULL
);
</code>

This table represents each population for each run at each time step.  While the other table represent (collectively) what each population/stratification looks like, this table collects the population counts of each population as the simulation runs.

=== Example ===
|| *run_id* || *population_id* || *time_step* || *pop_count* ||
|| 1 || 1 || 1 || 100000 ||
|| 1 || 2 || 1 || 50000 ||
|| 1 || 3 || 1 || 50000 ||
|| 1 || 4 || 1 || 25000 ||
|| 1 || 1 || 2 || 80000 ||
|| 1 || 2 || 2 || 59000 ||
|| 1 || 3 || 2 || 56000 ||
|| 1 || 4 || 2 || 30000 ||