<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>edu.pitt.apollo</groupId>
        <artifactId>apollo-ws</artifactId>
        <version>2.0.2-SNAPSHOT</version>
    </parent>
    <artifactId>broker-service</artifactId>
    <name>Broker Service</name>
    <packaging>bundle</packaging>

    <repositories>
        <repository>
            <id>source.db4o</id>
            <url>http://source.db4o.com/maven/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.db4o</groupId>
            <artifactId>db4o-core-java5</artifactId>
            <version>8.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.4</version>
        </dependency>
        <dependency>
            <groupId>edu.pitt.apollo</groupId>
            <artifactId>simulator-service-client</artifactId>
            <version>2.0.2-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>edu.pitt.apollo</groupId>
            <artifactId>library-service-client</artifactId>
            <version>2.0.2-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>edu.pitt.apollo</groupId>
            <artifactId>visualizer-service-client</artifactId>
            <version>2.0.2-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>edu.pitt.apollo</groupId>
            <artifactId>syntheticpopulation-service-client</artifactId>
            <version>2.0.2-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.12</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.7</version>
        </dependency>


        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.12</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jvnet.hyperjaxb3</groupId>
            <artifactId>hyperjaxb3-ejb-runtime</artifactId>
            <version>0.5.6</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.1.Final</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.4</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
       
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>edu.pitt.apollo</groupId>
            <artifactId>db-common</artifactId>
            <version>2.0.2-SNAPSHOT</version>
        </dependency>
       
        <dependency>
        	<groupId>edu.pitt.apollo</groupId>
        	<artifactId>translator-service-skeleton</artifactId>
        	<version>2.0.2-SNAPSHOT</version>
        	<type>jar</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
						<!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../src/main/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


			<!-- Below plugin provides a separate JAR for the JAX-WS artifacts (i.e., 
				the objects created by running wsdl2java or wsimport), as this JAR will also 
				be used by the SOAP client. More info: http://maven.apache.org/plugins/maven-assembly-plugin/ -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/jaxws-jar.xml</descriptor>
                    </descriptors>
                    <appendAssemblyId>true</appendAssemblyId>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>2.3.7</version>
                    <extensions>true</extensions>
                </plugin>
            </plugins>
        </pluginManagement>
		<!-- Name of the generated WAR file -->
        <finalName>apollo-service202</finalName>
    </build>

    <profiles>
        <profile>
            <id>CXF</id>
			<!-- To use Metro by default, move activation element to its profile below -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.cxf</groupId>
                        <artifactId>cxf-codegen-plugin</artifactId>
                        <version>${cxf.version}</version>
                        <executions>
                            <execution>
                                <configuration>
                                    <sourceRoot>
										${basedir}/target/generated-sources
                                    </sourceRoot>
                                    <wsdlOptions>
                                        <wsdlOption>
                                            <wsdl>
												${basedir}/../src/main/resources/apolloservice202.wsdl
                                            </wsdl>
                                            <wsdlLocation>classpath:apolloservice202.wsdl</wsdlLocation>
                                        </wsdlOption>
                                    </wsdlOptions>
                                </configuration>
                                <goals>
                                    <goal>wsdl2java</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.felix</groupId>
                        <artifactId>maven-bundle-plugin</artifactId>
                        <configuration>
                            <instructions>
                                <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                                <Require-Bundle>org.apache.cxf.bundle,org.springframework.beans</Require-Bundle>
                                <Export-Package>edu.pitt.apollo.service</Export-Package>
                            </instructions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
