##################################################
# file: SimulatorService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     C:\Python27\Scripts\wsdl2py-script.py --complexType simulatorservice.wsdl
# 
##################################################

from SimulatorService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class SimulatorServiceLocator:
    SimulatorServiceEndpoint_address = "http://localhost:8080/simulatorservice/services/simulatorservice"
    def getSimulatorServiceEndpointAddress(self):
        return SimulatorServiceLocator.SimulatorServiceEndpoint_address
    def getSimulatorServiceEndpoint(self, url=None, **kw):
        return SimulatorServiceBindingSOAP(url or SimulatorServiceLocator.SimulatorServiceEndpoint_address, **kw)

# Methods
class SimulatorServiceBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: run
    def run(self, request, **kw):
        if isinstance(request, runRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://service.apollo.pitt.edu/simulatorservice/run", **kw)
        # no output wsaction
        response = self.binding.Receive(runResponse.typecode)
        return response

    # op: getRunStatus
    def getRunStatus(self, request, **kw):
        if isinstance(request, getRunStatusRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://service.apollo.pitt.edu/simulatorservice/getRunStatus", **kw)
        # no output wsaction
        response = self.binding.Receive(getRunStatusResponse.typecode)
        return response

    # op: getSupportedLocations
    def getSupportedLocations(self, request, **kw):
        if isinstance(request, getSupportedLocationsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://service.apollo.pitt.edu/simulatorservice/getSupportedLocations", **kw)
        # no output wsaction
        response = self.binding.Receive(getSupportedLocationsResponse.typecode)
        return response

runRequest = GED("http://service.apollo.pitt.edu/simulatorservice/", "run").pyclass

runResponse = GED("http://service.apollo.pitt.edu/simulatorservice/", "runResponse").pyclass

getRunStatusRequest = GED("http://service.apollo.pitt.edu/simulatorservice/", "getRunStatus").pyclass

getRunStatusResponse = GED("http://service.apollo.pitt.edu/simulatorservice/", "getRunStatusResponse").pyclass

getSupportedLocationsRequest = GED("http://service.apollo.pitt.edu/simulatorservice/", "getSupportedLocations").pyclass

getSupportedLocationsResponse = GED("http://service.apollo.pitt.edu/simulatorservice/", "getSupportedLocationsResponse").pyclass
