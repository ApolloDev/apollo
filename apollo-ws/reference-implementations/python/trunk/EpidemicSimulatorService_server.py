# Copyright 2012 University of Pittsburgh
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy of
# the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.

##################################################
# file: EpidemicSimulatorService_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      c:\programs\Python27\Scripts\wsdl2py-script.py epidemicsimulator.wsdl
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from EpidemicSimulatorService_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
getPreconfiguredModelsRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getPreconfiguredModels").pyclass

getPreconfiguredModelsResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getPreconfiguredModelsResponse").pyclass

getModelConfigurationRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getModelConfiguration").pyclass

getModelConfigurationResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getModelConfigurationResponse").pyclass

runRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "run").pyclass

runResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "runResponse").pyclass

releaseResourcesRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "releaseResources").pyclass

releaseResourcesResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "releaseResourcesResponse").pyclass

getNativeConfigurationFileRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getNativeConfigurationFile").pyclass

getNativeConfigurationFileResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getNativeConfigurationFileResponse").pyclass

getSimulatorDescriptionRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getSimulatorDescription").pyclass

getSimulatorDescriptionResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getSimulatorDescriptionResponse").pyclass

getModelDescriptionRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getModelDescription").pyclass

getModelDescriptionResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getModelDescriptionResponse").pyclass

getResultRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getResult").pyclass

getResultResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getResultResponse").pyclass

getRunStatusRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getRunStatus").pyclass

getRunStatusResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "getRunStatusResponse").pyclass

runBatchRequest = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "runBatch").pyclass

runBatchResponse = GED("http://service.apollo.pitt.edu/epidemicsimulator/", "runBatchResponse").pyclass


# Service Skeletons
class EpidemicSimulatorService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/GenericEpidemicModelService/services/EpidemicSimulatorPort', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_getPreconfiguredModels(self, ps, **kw):
        request = ps.Parse(getPreconfiguredModelsRequest.typecode)
        return request,getPreconfiguredModelsResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/getPreconfiguredModels'] = 'soap_getPreconfiguredModels'
    root[(getPreconfiguredModelsRequest.typecode.nspname,getPreconfiguredModelsRequest.typecode.pname)] = 'soap_getPreconfiguredModels'

    def soap_getModelConfiguration(self, ps, **kw):
        request = ps.Parse(getModelConfigurationRequest.typecode)
        return request,getModelConfigurationResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/getModelConfiguration'] = 'soap_getModelConfiguration'
    root[(getModelConfigurationRequest.typecode.nspname,getModelConfigurationRequest.typecode.pname)] = 'soap_getModelConfiguration'

    def soap_run(self, ps, **kw):
        request = ps.Parse(runRequest.typecode)
        return request,runResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/run'] = 'soap_run'
    root[(runRequest.typecode.nspname,runRequest.typecode.pname)] = 'soap_run'

    def soap_releaseResources(self, ps, **kw):
        request = ps.Parse(releaseResourcesRequest.typecode)
        return request,releaseResourcesResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/releaseResources'] = 'soap_releaseResources'
    root[(releaseResourcesRequest.typecode.nspname,releaseResourcesRequest.typecode.pname)] = 'soap_releaseResources'

    def soap_getNativeConfigurationFile(self, ps, **kw):
        request = ps.Parse(getNativeConfigurationFileRequest.typecode)
        return request,getNativeConfigurationFileResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/getNativeConfigurationFile'] = 'soap_getNativeConfigurationFile'
    root[(getNativeConfigurationFileRequest.typecode.nspname,getNativeConfigurationFileRequest.typecode.pname)] = 'soap_getNativeConfigurationFile'

    def soap_getSimulatorDescription(self, ps, **kw):
        request = ps.Parse(getSimulatorDescriptionRequest.typecode)
        return request,getSimulatorDescriptionResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/getSimulatorDescription'] = 'soap_getSimulatorDescription'
    root[(getSimulatorDescriptionRequest.typecode.nspname,getSimulatorDescriptionRequest.typecode.pname)] = 'soap_getSimulatorDescription'

    def soap_getModelDescription(self, ps, **kw):
        request = ps.Parse(getModelDescriptionRequest.typecode)
        return request,getModelDescriptionResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/getModelDescription'] = 'soap_getModelDescription'
    root[(getModelDescriptionRequest.typecode.nspname,getModelDescriptionRequest.typecode.pname)] = 'soap_getModelDescription'

    def soap_getResult(self, ps, **kw):
        request = ps.Parse(getResultRequest.typecode)
        return request,getResultResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/getResult'] = 'soap_getResult'
    root[(getResultRequest.typecode.nspname,getResultRequest.typecode.pname)] = 'soap_getResult'

    def soap_getRunStatus(self, ps, **kw):
        request = ps.Parse(getRunStatusRequest.typecode)
        return request,getRunStatusResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/getRunStatus'] = 'soap_getRunStatus'
    root[(getRunStatusRequest.typecode.nspname,getRunStatusRequest.typecode.pname)] = 'soap_getRunStatus'

    def soap_runBatch(self, ps, **kw):
        request = ps.Parse(runBatchRequest.typecode)
        return request,runBatchResponse()

    soapAction['http://service.apollo.pitt.edu/epidemicsimulator/runBatch'] = 'soap_runBatch'
    root[(runBatchRequest.typecode.nspname,runBatchRequest.typecode.pname)] = 'soap_runBatch'

