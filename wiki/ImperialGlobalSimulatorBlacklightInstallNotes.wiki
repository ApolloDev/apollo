This page describes the procedure for installing Imperial's Global Simulator on Blacklight

= Introduction =

Add your content here.


= Details =

*Downloading*
The software is available for download at http://sourceforge.net/projects/globalepidemics/

All of the script files had DOS "^M" in them, so I had to run everything through "fromdos" to put them appropriately in linux format.

*Compiling*
The linux binaries that were provided for the C++ code were not appropriate for Blacklight, as was the MPI version that was used to compile them. So I had to recompile.

1. Go to directory src/
2. I found a bug in the source file "SynthpPopul/Util.cpp" in the function DataIn::ReadDataBlock(unsigned int id).  The variable id_ was declared as a char, and it needs to be defined as an int on line 500.
3. Sim requires libodbc, so I had to download and install unixODBC, which is available at http://www.unixodbc.org/.
4. Alter compile.sh in Sim so that it was compatible with the mpi on Blacklights MPI.  The first lines of src/Sim/compile.sh are now:

{{{
INCLUDE="../../include/linux"
LIB="../../lib/linux"
COMPILE="g++ -I$INCLUDE -Wl,-Bsymbolic-functions -L$LIB -lmpich -lopa -lpthread -lrt -lodbc -fopenmp -O2  -c "
LINK="g++ -I$INCLUDE -L$LIB -L/usr/local/packages/unixODBC-2.3.1/lib -fopenmp -lodbc -lmpi -lmpi++ -lpthread -lrt -Wl,-Bsymbolic-functions"
}}}

*GetAdminUnits*
1. There is a known issue on Blacklight because of the nature of the machine that requires one to limit the number of garbage collection threads to 1 per core.  This is done by adding the flag -XX:ParallelGCThreads=numberofCores in get_admin_units.sh.
2. This took about 7 hours to complete on blacklight, it could be made faster by parallelizing it, but since the code resided in java, I chose to bite the bullet on time.

*SynthPopulation*
1. The scripts in the bin-linux/SynthPopul/scripts directory were windows specific, and fromdos needed to be used to remove the "^M" control characters.
2. The current scripts in order to use PBS, submit about 300 jobs individually to the queue to create a synthetic population for each country independently.  This wouldn't make blacklight a happy machine.  To batch this process into one submission, I altered genterate_synth_pop.sh to run 8 at a time in the backgound, and when those finish, move on to the next set. Here is the beginning of the script for reference:

{{{
#!/bin/csh -v
#PBS -l ncpus=32
#PBS -N getadmin.out
#PBS -l walltime=10:00:00
#PBS -j oe

cd $PBS_O_WORKDIR

#% This generates the entire synthetic population.
#% Make sure you've checked the REPO definition in run_single.sh first.

./run_single.sh Africa Algeria &
./run_single.sh Africa Angola &
./run_single.sh Africa Benin &
./run_single.sh Africa Botswana &
./run_single.sh Africa Burkina_Faso &
./run_single.sh Africa Burundi &
./run_single.sh Africa Cameroon &
./run_single.sh Africa Cape_Verde &
./run_single.sh Africa Centr_African_Rep &
./run_single.sh Africa Chad &
./run_single.sh Africa Comoros &
wait
./run_single.sh Africa Congo_Brazzaville &
./run_single.sh Africa Congo_Dem_Rep &
./run_single.sh Africa Cote_dIvore &
./run_single.sh Africa Djibouti &
./run_single.sh Africa Egypt &
./run_single.sh Africa Equatorial_Guinea &
./run_single.sh Africa Eritrea &
./run_single.sh Africa Ethiopia &
wait
./run_single.sh Africa Gabon &
./run_single.sh Africa Gambia &
...
}}}